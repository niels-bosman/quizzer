{"ast":null,"code":"var _jsxFileName = \"/home/niels/Projects/school/quizzer/client/scoreboard/src/components/pages/Question.js\",\n    _s = $RefreshSig$();\n\nimport InfoLabel from '../InfoLabel';\nimport SubTitle from '../SubTitle';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCurrentQuestion, fetchGivenAnswers } from '../../reducers/question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Question = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const lobbyId = useSelector(({\n    quiz\n  }) => quiz.lobbyId);\n  const teams = useSelector(({\n    quiz\n  }) => quiz.teams);\n  const {\n    question,\n    category\n  } = useSelector(({\n    question\n  }) => question.current);\n  const answers = useSelector(({\n    question\n  }) => question.answers);\n  const [answeredTable, setAnsweredTable] = useState([]);\n  useEffect(() => {\n    dispatch(fetchCurrentQuestion({\n      lobbyId\n    }));\n  }, [dispatch, lobbyId]);\n\n  const formatAnswers = () => {\n    setAnsweredTable([]);\n    let tempTable = [];\n\n    for (const team of teams) {\n      if (answers.some(e => e.team._id === team._id)) {\n        tempTable.push({\n          'teamName': team._id,\n          'answered': 'ja'\n        });\n      } else {\n        tempTable.push({\n          'teamName': team._id,\n          'answered': 'nee'\n        });\n      }\n    }\n\n    setAnsweredTable(tempTable);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async () => {\n        await dispatch(fetchGivenAnswers({\n          lobbyId\n        }));\n        formatAnswers();\n      },\n      children: \"Fetch answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center my-6\",\n      children: [/*#__PURE__*/_jsxDEV(SubTitle, {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Team naam\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Beantwoord?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: answeredTable === null || answeredTable === void 0 ? void 0 : answeredTable.map((answer, i) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: answer.teamName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: answer.answered\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 17\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Question, \"xS3skGGsC1KGg/SSRL9D0/FopLc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/home/niels/Projects/school/quizzer/client/scoreboard/src/components/pages/Question.js"],"names":["InfoLabel","SubTitle","useEffect","useState","useDispatch","useSelector","fetchCurrentQuestion","fetchGivenAnswers","Question","dispatch","lobbyId","quiz","teams","question","category","current","answers","answeredTable","setAnsweredTable","formatAnswers","tempTable","team","some","e","_id","push","display","justifyContent","map","answer","i","teamName","answered"],"mappings":"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","sourcesContent":["import InfoLabel from '../InfoLabel';\nimport SubTitle from '../SubTitle';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCurrentQuestion, fetchGivenAnswers } from '../../reducers/question';\n\nconst Question = () => {\n  const dispatch                          = useDispatch();\n  const lobbyId                           = useSelector(({ quiz }) => quiz.lobbyId);\n  const teams                             = useSelector(({ quiz }) => quiz.teams);\n  const { question, category }            = useSelector(({ question }) => question.current);\n  const answers                           = useSelector(({ question }) => question.answers);\n  const [answeredTable, setAnsweredTable] = useState([]);\n\n  useEffect(() => {\n    dispatch(fetchCurrentQuestion({ lobbyId }));\n  }, [dispatch, lobbyId]);\n\n  const formatAnswers = () => {\n\n    setAnsweredTable([]);\n    let tempTable = [];\n\n    for (const team of teams) {\n      if (answers.some(e => e.team._id === team._id)) {\n        tempTable.push({ 'teamName': team._id, 'answered': 'ja' });\n      } else {\n        tempTable.push({ 'teamName': team._id, 'answered': 'nee' });\n      }\n    }\n\n    setAnsweredTable(tempTable);\n  };\n\n  return (\n    <>\n      <InfoLabel>{category}</InfoLabel>\n\n      <button onClick={async () => {\n        await dispatch(fetchGivenAnswers({ lobbyId }));\n        formatAnswers();\n      }}>Fetch answers\n      </button>\n\n      <div className=\"text-center my-6\">\n        <SubTitle>{question}</SubTitle>\n\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <table>\n            <thead>\n            <tr>\n              <th>Team naam</th>\n              <th>Beantwoord?</th>\n            </tr>\n            </thead>\n            <tbody>\n            {answeredTable?.map((answer, i) => {\n              return <tr key={i}>\n                <td>{answer.teamName}</td>\n                <td>{answer.answered}</td>\n              </tr>;\n            })}\n            </tbody>\n          </table>\n        </div>\n\n\n      </div>\n    </>\n  );\n};\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}