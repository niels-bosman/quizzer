{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  current: '',\n  answers: []\n};\nexport const fetchCurrentQuestion = createAsyncThunk('question/fetchCurrentQuestionStatus', async (_, {\n  getState\n}) => {\n  var _getState;\n\n  const {\n    lobbyId\n  } = (_getState = getState()) === null || _getState === void 0 ? void 0 : _getState.quiz;\n  const {\n    data\n  } = await axios.get(`${process.env.REACT_APP_API_URI}/lobbies/${lobbyId}/question`);\n  return data;\n});\nexport const fetchGivenAnswers = createAsyncThunk('question/fetchAnswersStatus', async (_, {\n  getState\n}) => {\n  var _getState2;\n\n  const {\n    lobbyId\n  } = (_getState2 = getState()) === null || _getState2 === void 0 ? void 0 : _getState2.quiz;\n  const {\n    data\n  } = await axios.get(`${process.env.REACT_APP_API_URI}/lobbies/${lobbyId}/question`);\n  return data;\n});\nexport const slice = createSlice({\n  name: 'question',\n  initialState,\n  reducers: {\n    example: () => {}\n  },\n  extraReducers: {\n    [fetchCurrentQuestion.fulfilled]: (state, {\n      payload\n    }) => {\n      state.current = {\n        question: payload.question,\n        category: payload.category\n      };\n    }\n  }\n});\nexport const {\n  example\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"sources":["/home/niels/Projects/school/quizzer/client/scoreboard/src/reducers/question.js"],"names":["createAsyncThunk","createSlice","axios","initialState","current","answers","fetchCurrentQuestion","_","getState","lobbyId","quiz","data","get","process","env","REACT_APP_API_URI","fetchGivenAnswers","slice","name","reducers","example","extraReducers","fulfilled","state","payload","question","category","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;AAKA,OAAO,MAAMC,oBAAoB,GAAGN,gBAAgB,CAAC,qCAAD,EAAwC,OAAOO,CAAP,EAAU;AAAEC,EAAAA;AAAF,CAAV,KAA2B;AAAA;;AACrH,QAAM;AAAEC,IAAAA;AAAF,mBAAcD,QAAQ,EAAtB,8CAAc,UAAYE,IAAhC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAc,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,YAAWN,OAAQ,WAA9D,CAA1B;AAEA,SAAOE,IAAP;AACD,CALmD,CAA7C;AAOP,OAAO,MAAMK,iBAAiB,GAAGhB,gBAAgB,CAAC,6BAAD,EAAgC,OAAOO,CAAP,EAAU;AAAEC,EAAAA;AAAF,CAAV,KAA2B;AAAA;;AAC1G,QAAM;AAAEC,IAAAA;AAAF,oBAAcD,QAAQ,EAAtB,+CAAc,WAAYE,IAAhC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAc,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,YAAWN,OAAQ,WAA9D,CAA1B;AAEA,SAAOE,IAAP;AACD,CALgD,CAA1C;AAOP,OAAO,MAAMM,KAAK,GAAGhB,WAAW,CAAC;AAC/BiB,EAAAA,IAAI,EAAW,UADgB;AAE/Bf,EAAAA,YAF+B;AAG/BgB,EAAAA,QAAQ,EAAO;AACbC,IAAAA,OAAO,EAAE,MAAM,CACd;AAFY,GAHgB;AAO/BC,EAAAA,aAAa,EAAE;AACb,KAACf,oBAAoB,CAACgB,SAAtB,GAAkC,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACxDD,MAAAA,KAAK,CAACnB,OAAN,GAAgB;AAACqB,QAAAA,QAAQ,EAAED,OAAO,CAACC,QAAnB;AAA6BC,QAAAA,QAAQ,EAAEF,OAAO,CAACE;AAA/C,OAAhB;AACD;AAHY;AAPgB,CAAD,CAAzB;AAcP,OAAO,MAAM;AAAEN,EAAAA;AAAF,IAAcH,KAAK,CAACU,OAA1B;AAEP,eAAeV,KAAK,CAACW,OAArB","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst initialState = {\n  current: '',\n  answers: []\n};\n\nexport const fetchCurrentQuestion = createAsyncThunk('question/fetchCurrentQuestionStatus', async (_, { getState }) => {\n  const { lobbyId } = getState()?.quiz;\n  const { data }    = await axios.get(`${process.env.REACT_APP_API_URI}/lobbies/${lobbyId}/question`);\n\n  return data;\n});\n\nexport const fetchGivenAnswers = createAsyncThunk('question/fetchAnswersStatus', async (_, { getState }) => {\n  const { lobbyId } = getState()?.quiz;\n  const { data }    = await axios.get(`${process.env.REACT_APP_API_URI}/lobbies/${lobbyId}/question`);\n\n  return data;\n});\n\nexport const slice = createSlice({\n  name:          'question',\n  initialState,\n  reducers:      {\n    example: () => {\n    },\n  },\n  extraReducers: {\n    [fetchCurrentQuestion.fulfilled]: (state, { payload }) => {\n      state.current = {question: payload.question, category: payload.category};\n    },\n  },\n});\n\nexport const { example } = slice.actions;\n\nexport default slice.reducer;"]},"metadata":{},"sourceType":"module"}