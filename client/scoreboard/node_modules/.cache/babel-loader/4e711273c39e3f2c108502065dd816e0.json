{"ast":null,"code":"var _jsxFileName = \"/home/niels/Projects/school/quizzer/client/scoreboard/src/components/WinnerGraph.js\",\n    _s = $RefreshSig$();\n\nimport WinnerGraphBar from './WinnerGraphBar';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WinnerGraph = () => {\n  _s();\n\n  const results = useSelector(({\n    quiz\n  }) => quiz.results);\n\n  const calculatePercentage = (maxScore, ownScore) => Math.round(ownScore / maxScore * 100 / 1.5);\n\n  const [first, second, third] = [...results];\n  const orderedWinners = [{ ...second,\n    percentage: calculatePercentage(first.score, second.score)\n  }, { ...first,\n    percentage: 100\n  }, { ...third,\n    percentage: calculatePercentage(first.score, third.score)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"m-winner-graph\",\n    children: orderedWinners.map((winner, index) => /*#__PURE__*/_jsxDEV(WinnerGraphBar, {\n      name: winner._id,\n      score: winner.score,\n      place: index + 1 === 1 ? 2 : index + 1 === 2 ? 1 : 3,\n      percentage: winner.percentage\n    }, winner._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WinnerGraph, \"Yag2PiJG5nhVgIZD/LrVw7fEXBE=\", false, function () {\n  return [useSelector];\n});\n\n_c = WinnerGraph;\nexport default WinnerGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"WinnerGraph\");","map":{"version":3,"sources":["/home/niels/Projects/school/quizzer/client/scoreboard/src/components/WinnerGraph.js"],"names":["WinnerGraphBar","useSelector","WinnerGraph","results","quiz","calculatePercentage","maxScore","ownScore","Math","round","first","second","third","orderedWinners","percentage","score","map","winner","index","_id"],"mappings":";;;AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,OAAO,GAAGF,WAAW,CAAC,CAAC;AAACG,IAAAA;AAAD,GAAD,KAAYA,IAAI,CAACD,OAAlB,CAA3B;;AAEA,QAAME,mBAAmB,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwBC,IAAI,CAACC,KAAL,CAAYF,QAAQ,GAAGD,QAAZ,GAAwB,GAAxB,GAA8B,GAAzC,CAApD;;AAEA,QAAM,CAACI,KAAD,EAAQC,MAAR,EAAgBC,KAAhB,IAAyB,CAAC,GAAGT,OAAJ,CAA/B;AAEA,QAAMU,cAAc,GAAG,CACrB,EAAE,GAAGF,MAAL;AAAaG,IAAAA,UAAU,EAAET,mBAAmB,CAACK,KAAK,CAACK,KAAP,EAAcJ,MAAM,CAACI,KAArB;AAA5C,GADqB,EAErB,EAAE,GAAGL,KAAL;AAAYI,IAAAA,UAAU,EAAE;AAAxB,GAFqB,EAGrB,EAAE,GAAGF,KAAL;AAAYE,IAAAA,UAAU,EAAET,mBAAmB,CAACK,KAAK,CAACK,KAAP,EAAcH,KAAK,CAACG,KAApB;AAA3C,GAHqB,CAAvB;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cACGF,cAAc,CAACG,GAAf,CAAmB,CAACC,MAAD,EAASC,KAAT,kBAClB,QAAC,cAAD;AACE,MAAA,IAAI,EAAED,MAAM,CAACE,GADf;AAEE,MAAA,KAAK,EAAEF,MAAM,CAACF,KAFhB;AAGE,MAAA,KAAK,EAAEG,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkB,CAAlB,GAAsBA,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkB,CAAlB,GAAsB,CAHrD;AAIE,MAAA,UAAU,EAAED,MAAM,CAACH;AAJrB,OAKOG,MAAM,CAACE,GALd;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA1BD;;GAAMjB,W;UACYD,W;;;KADZC,W;AA4BN,eAAeA,WAAf","sourcesContent":["import WinnerGraphBar from './WinnerGraphBar';\nimport { useSelector } from 'react-redux';\n\nconst WinnerGraph = () => {\n  const results = useSelector(({quiz}) => quiz.results);\n\n  const calculatePercentage = (maxScore, ownScore) => Math.round((ownScore / maxScore) * 100 / 1.5);\n\n  const [first, second, third] = [...results];\n\n  const orderedWinners = [\n    { ...second, percentage: calculatePercentage(first.score, second.score) },\n    { ...first, percentage: 100 },\n    { ...third, percentage: calculatePercentage(first.score, third.score) },\n  ];\n\n  return (\n    <div className=\"m-winner-graph\">\n      {orderedWinners.map((winner, index) => (\n        <WinnerGraphBar\n          name={winner._id}\n          score={winner.score}\n          place={index + 1 === 1 ? 2 : index + 1 === 2 ? 1 : 3}\n          percentage={winner.percentage}\n          key={winner._id}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default WinnerGraph;"]},"metadata":{},"sourceType":"module"}