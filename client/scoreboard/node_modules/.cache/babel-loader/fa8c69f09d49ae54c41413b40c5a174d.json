{"ast":null,"code":"var _jsxFileName = \"/home/niels/Projects/school/quizzer/client/scoreboard/src/components/pages/Question.js\",\n    _s = $RefreshSig$();\n\nimport InfoLabel from '../InfoLabel';\nimport SubTitle from '../SubTitle';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCurrentQuestion, fetchGivenAnswers } from '../../reducers/question';\nimport QuestionTable from '../QuestionTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Question = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const lobbyId = useSelector(({\n    quiz\n  }) => quiz.lobbyId);\n  const {\n    question,\n    category\n  } = useSelector(({\n    question\n  }) => question.current);\n  useEffect(() => {\n    dispatch(fetchCurrentQuestion({\n      lobbyId\n    }));\n    dispatch(fetchGivenAnswers());\n  }, [dispatch, lobbyId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center my-6\",\n      children: [/*#__PURE__*/_jsxDEV(SubTitle, {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(QuestionTable, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Question, \"UwioY+HVgGbJXBz72O9k5Zzomok=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/home/niels/Projects/school/quizzer/client/scoreboard/src/components/pages/Question.js"],"names":["InfoLabel","SubTitle","useEffect","useDispatch","useSelector","fetchCurrentQuestion","fetchGivenAnswers","QuestionTable","Question","dispatch","lobbyId","quiz","question","category","current"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,oBAAT,EAA+BC,iBAA/B,QAAwD,yBAAxD;AACA,OAAOC,aAAP,MAA0B,kBAA1B;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAiBN,WAAW,EAA1C;AACA,QAAMO,OAAO,GAAkBN,WAAW,CAAC,CAAC;AAAEO,IAAAA;AAAF,GAAD,KAAcA,IAAI,CAACD,OAApB,CAA1C;AACA,QAAM;AAAEE,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBT,WAAW,CAAC,CAAC;AAAEQ,IAAAA;AAAF,GAAD,KAAkBA,QAAQ,CAACE,OAA5B,CAA1C;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACJ,oBAAoB,CAAC;AAAEK,MAAAA;AAAF,KAAD,CAArB,CAAR;AACAD,IAAAA,QAAQ,CAACH,iBAAiB,EAAlB,CAAR;AACD,GAHQ,EAGN,CAACG,QAAD,EAAWC,OAAX,CAHM,CAAT;AAKA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAA,gBAAYG;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE,QAAC,QAAD;AAAA,kBAAWD;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA,+BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAWD,CArBD;;GAAMJ,Q;UAC2BL,W,EACAC,W,EACAA,W;;;KAH3BI,Q;AAuBN,eAAeA,QAAf","sourcesContent":["import InfoLabel from '../InfoLabel';\nimport SubTitle from '../SubTitle';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCurrentQuestion, fetchGivenAnswers } from '../../reducers/question';\nimport QuestionTable from '../QuestionTable';\n\nconst Question = () => {\n  const dispatch               = useDispatch();\n  const lobbyId                = useSelector(({ quiz }) => quiz.lobbyId);\n  const { question, category } = useSelector(({ question }) => question.current);\n\n  useEffect(() => {\n    dispatch(fetchCurrentQuestion({ lobbyId }));\n    dispatch(fetchGivenAnswers());\n  }, [dispatch, lobbyId]);\n\n  return (\n    <>\n      <InfoLabel>{category}</InfoLabel>\n      <div className=\"text-center my-6\">\n        <SubTitle>{question}</SubTitle>\n        <div className=\"flex justify-content-center\">\n          <QuestionTable />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}