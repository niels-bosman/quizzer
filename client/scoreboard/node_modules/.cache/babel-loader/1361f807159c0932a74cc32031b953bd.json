{"ast":null,"code":"var _jsxFileName = \"/home/niels/Projects/school/quizzer/client/scoreboard/src/components/pages/LobbyInfo.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTeams } from '../../reducers/quiz';\nimport { io } from 'socket.io-client';\nimport { useEffect } from 'react';\nimport Title from '../Title';\nimport InfoLabel from '../InfoLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('ws://localhost:3000', {\n  reconnectionDelayMax: 10000,\n  withCredentials: true\n});\n\nconst LobbyInfo = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const teams = useSelector(state => state.quiz.teams);\n  const {\n    lobbyId\n  } = useParams();\n  socket.emit('SCOREBOARD_CONNECT', {\n    lobby: lobbyId\n  });\n  useEffect(() => {\n    dispatch(fetchTeams({\n      lobbyId\n    }));\n  }, [dispatch, lobbyId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n      children: \"Doe mee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lobby\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        children: [\"Code: \", lobbyId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Aantal teams: \", teams.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LobbyInfo, \"/lnQJI5wpjx2H9h63MxYBAMRLgE=\", false, function () {\n  return [useDispatch, useSelector, useParams];\n});\n\n_c = LobbyInfo;\nexport default LobbyInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"LobbyInfo\");","map":{"version":3,"sources":["/home/niels/Projects/school/quizzer/client/scoreboard/src/components/pages/LobbyInfo.js"],"names":["useParams","useDispatch","useSelector","fetchTeams","io","useEffect","Title","InfoLabel","socket","reconnectionDelayMax","withCredentials","LobbyInfo","dispatch","teams","state","quiz","lobbyId","emit","lobby","length"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,cAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;;AAEA,MAAMC,MAAM,GAAGJ,EAAE,CAAC,qBAAD,EAAwB;AACvCK,EAAAA,oBAAoB,EAAE,KADiB;AAEvCC,EAAAA,eAAe,EAAO;AAFiB,CAAxB,CAAjB;;AAKA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,QAAQ,GAAMX,WAAW,EAA/B;AACA,QAAMY,KAAK,GAASX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,KAArB,CAA/B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAchB,SAAS,EAA7B;AAEAQ,EAAAA,MAAM,CAACS,IAAP,CAAY,oBAAZ,EAAkC;AAAEC,IAAAA,KAAK,EAAEF;AAAT,GAAlC;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACT,UAAU,CAAC;AAAEa,MAAAA;AAAF,KAAD,CAAX,CAAR;AACD,GAFQ,EAEN,CAACJ,QAAD,EAAWI,OAAX,CAFM,CAAT;AAIA,sBACE;AAAA,4BAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAA,6BAAcA,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,qCAAmBH,KAAK,CAACM,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAaD,CAxBD;;GAAMR,S;UACgBV,W,EACAC,W,EACAF,S;;;KAHhBW,S;AA0BN,eAAeA,SAAf","sourcesContent":["import { useParams } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTeams } from '../../reducers/quiz';\nimport { io } from 'socket.io-client';\nimport { useEffect } from 'react';\nimport Title from '../Title';\nimport InfoLabel from '../InfoLabel';\n\nconst socket = io('ws://localhost:3000', {\n  reconnectionDelayMax: 10000,\n  withCredentials:      true,\n});\n\nconst LobbyInfo = () => {\n  const dispatch    = useDispatch();\n  const teams       = useSelector(state => state.quiz.teams);\n  const { lobbyId } = useParams();\n\n  socket.emit('SCOREBOARD_CONNECT', { lobby: lobbyId });\n\n  useEffect(() => {\n    dispatch(fetchTeams({ lobbyId }));\n  }, [dispatch, lobbyId]);\n\n  return (\n    <>\n\n      <InfoLabel>Doe mee</InfoLabel>\n\n      <div className=\"text-center\">\n        <h2>Lobby</h2>\n        <Title>Code: {lobbyId}</Title>\n        <h2>Aantal teams: {teams.length}</h2>\n      </div>\n\n    </>\n  );\n};\n\nexport default LobbyInfo;"]},"metadata":{},"sourceType":"module"}