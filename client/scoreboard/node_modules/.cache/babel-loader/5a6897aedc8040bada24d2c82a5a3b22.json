{"ast":null,"code":"var _jsxFileName = \"/home/niels/Projects/school/quizzer/client/scoreboard/src/components/pages/Question.js\",\n    _s = $RefreshSig$();\n\nimport InfoLabel from '../InfoLabel';\nimport SubTitle from '../SubTitle';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCurrentQuestion } from '../../reducers/question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Question = () => {\n  _s();\n\n  var _formatAnswers;\n\n  const dispatch = useDispatch();\n  const lobbyId = useSelector(({\n    quiz\n  }) => quiz.lobbyId);\n  const teams = useSelector(({\n    quiz\n  }) => quiz.teams);\n  const {\n    question,\n    category\n  } = useSelector(({\n    question\n  }) => question.current);\n  const answers = useSelector(({\n    question\n  }) => question.answers);\n  useEffect(() => {\n    dispatch(fetchCurrentQuestion({\n      lobbyId\n    }));\n  }, [dispatch, lobbyId]);\n\n  const formatAnswers = () => {\n    let answeredTable = [];\n\n    for (const team of teams) {\n      answeredTable.push({\n        teamName: team._id,\n        answered: answers.some(answer => answer.team._id === team._id) ? 'Ja' : 'Nee'\n      });\n    }\n\n    return answeredTable;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center my-6\",\n      children: [/*#__PURE__*/_jsxDEV(SubTitle, {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Team naam\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Beantwoord?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: (_formatAnswers = formatAnswers()) === null || _formatAnswers === void 0 ? void 0 : _formatAnswers.map((answer, i) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: answer.teamName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: answer.answered\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 17\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Question, \"GmjTDcx/Jgk0G+WYzlasW+YhX8o=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/home/niels/Projects/school/quizzer/client/scoreboard/src/components/pages/Question.js"],"names":["InfoLabel","SubTitle","useEffect","useDispatch","useSelector","fetchCurrentQuestion","Question","dispatch","lobbyId","quiz","teams","question","category","current","answers","formatAnswers","answeredTable","team","push","teamName","_id","answered","some","answer","display","justifyContent","map","i"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,oBAAT,QAAqC,yBAArC;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAAA;;AACrB,QAAMC,QAAQ,GAAiBJ,WAAW,EAA1C;AACA,QAAMK,OAAO,GAAkBJ,WAAW,CAAC,CAAC;AAAEK,IAAAA;AAAF,GAAD,KAAcA,IAAI,CAACD,OAApB,CAA1C;AACA,QAAME,KAAK,GAAoBN,WAAW,CAAC,CAAC;AAAEK,IAAAA;AAAF,GAAD,KAAcA,IAAI,CAACC,KAApB,CAA1C;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBR,WAAW,CAAC,CAAC;AAAEO,IAAAA;AAAF,GAAD,KAAkBA,QAAQ,CAACE,OAA5B,CAA1C;AACA,QAAMC,OAAO,GAAkBV,WAAW,CAAC,CAAC;AAAEO,IAAAA;AAAF,GAAD,KAAkBA,QAAQ,CAACG,OAA5B,CAA1C;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,QAAQ,CAACF,oBAAoB,CAAC;AAAEG,MAAAA;AAAF,KAAD,CAArB,CAAR;AACD,GAFQ,EAEN,CAACD,QAAD,EAAWC,OAAX,CAFM,CAAT;;AAIA,QAAMO,aAAa,GAAG,MAAM;AAC1B,QAAIC,aAAa,GAAG,EAApB;;AAEA,SAAK,MAAMC,IAAX,IAAmBP,KAAnB,EAA0B;AACxBM,MAAAA,aAAa,CAACE,IAAd,CAAmB;AACjBC,QAAAA,QAAQ,EAAEF,IAAI,CAACG,GADE;AAEjBC,QAAAA,QAAQ,EAAEP,OAAO,CAACQ,IAAR,CAAaC,MAAM,IAAIA,MAAM,CAACN,IAAP,CAAYG,GAAZ,KAAoBH,IAAI,CAACG,GAAhD,IAAuD,IAAvD,GAA8D;AAFvD,OAAnB;AAID;;AAED,WAAOJ,aAAP;AACD,GAXD;;AAaA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAA,gBAAYJ;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE,QAAC,QAAD;AAAA,kBAAWD;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAK,QAAA,KAAK,EAAE;AAAEa,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,cAAc,EAAE;AAAnC,SAAZ;AAAA,+BACE;AAAA,kCACE;AAAA,mCACA;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAA,wCACCV,aAAa,EADd,mDACC,eAAiBW,GAAjB,CAAqB,CAACH,MAAD,EAASI,CAAT,KAAe;AACnC,kCAAO;AAAA,wCACL;AAAA,4BAAKJ,MAAM,CAACJ;AAAZ;AAAA;AAAA;AAAA;AAAA,wBADK,eAEL;AAAA,4BAAKI,MAAM,CAACF;AAAZ;AAAA;AAAA;AAAA;AAAA,wBAFK;AAAA,iBAASM,CAAT;AAAA;AAAA;AAAA;AAAA,sBAAP;AAID,aALA;AADD;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AA8BD,CAtDD;;GAAMrB,Q;UAC2BH,W,EACAC,W,EACAA,W,EACAA,W,EACAA,W;;;KAL3BE,Q;AAwDN,eAAeA,QAAf","sourcesContent":["import InfoLabel from '../InfoLabel';\nimport SubTitle from '../SubTitle';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCurrentQuestion } from '../../reducers/question';\n\nconst Question = () => {\n  const dispatch               = useDispatch();\n  const lobbyId                = useSelector(({ quiz }) => quiz.lobbyId);\n  const teams                  = useSelector(({ quiz }) => quiz.teams);\n  const { question, category } = useSelector(({ question }) => question.current);\n  const answers                = useSelector(({ question }) => question.answers);\n\n  useEffect(() => {\n    dispatch(fetchCurrentQuestion({ lobbyId }));\n  }, [dispatch, lobbyId]);\n\n  const formatAnswers = () => {\n    let answeredTable = [];\n\n    for (const team of teams) {\n      answeredTable.push({\n        teamName: team._id,\n        answered: answers.some(answer => answer.team._id === team._id) ? 'Ja' : 'Nee'\n      });\n    }\n\n    return answeredTable;\n  };\n\n  return (\n    <>\n      <InfoLabel>{category}</InfoLabel>\n\n      <div className=\"text-center my-6\">\n        <SubTitle>{question}</SubTitle>\n\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <table>\n            <thead>\n            <tr>\n              <th>Team naam</th>\n              <th>Beantwoord?</th>\n            </tr>\n            </thead>\n            <tbody>\n            {formatAnswers()?.map((answer, i) => {\n              return <tr key={i}>\n                <td>{answer.teamName}</td>\n                <td>{answer.answered}</td>\n              </tr>;\n            })}\n            </tbody>\n          </table>\n        </div>\n\n\n      </div>\n    </>\n  );\n};\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}