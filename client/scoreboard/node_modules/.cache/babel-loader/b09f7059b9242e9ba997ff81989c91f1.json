{"ast":null,"code":"var _jsxFileName = \"/home/niels/Projects/school/quizzer/client/scoreboard/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { select } from '../reducers/category';\nimport { fetchTeams } from '../reducers/quiz';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('ws://localhost:3000', {\n  reconnectionDelayMax: 10000,\n  withCredentials: true\n});\nsocket.emit('SCOREBOARD_CONNECT', {\n  lobby: 'a'\n});\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const selected = useSelector(state => state.category.selected);\n  const teams = useSelector(state => state.quiz.teams);\n  socket.on('LOBBY_OPEN', data => {\n    console.log(\"A lobby was opened by a quiz master.\"); // TODO Get lobby ID from the database, display on the screen.\n\n    console.log(data);\n  });\n  socket.on('TEAM_JOINED', () => {\n    console.log(\"A team joined a game.\");\n    dispatch(fetchTeams());\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Scoreboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(select(Math.random())),\n      children: \"Click here to increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected: \", selected]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Alle teams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), teams.map((team, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: team._id\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 31\n    }, this))]\n  }, void 0, true);\n};\n\n_s(App, \"dElLSHGk1td+wLDLGG9rqNXLo9k=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/niels/Projects/school/quizzer/client/scoreboard/src/components/App.js"],"names":["useDispatch","useSelector","select","fetchTeams","io","socket","reconnectionDelayMax","withCredentials","emit","lobby","App","dispatch","selected","state","category","teams","quiz","on","data","console","log","Math","random","map","team","i","_id"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAASC,EAAT,QAAmB,kBAAnB;;;AAEA,MAAMC,MAAM,GAAGD,EAAE,CAAC,qBAAD,EAAwB;AACvCE,EAAAA,oBAAoB,EAAE,KADiB;AAEvCC,EAAAA,eAAe,EAAO;AAFiB,CAAxB,CAAjB;AAKAF,MAAM,CAACG,IAAP,CAAY,oBAAZ,EAAkC;AAACC,EAAAA,KAAK,EAAE;AAAR,CAAlC;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,QAAQ,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeF,QAAzB,CAA5B;AACA,QAAMG,KAAK,GAAGd,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACG,IAAN,CAAWD,KAArB,CAAzB;AAGAV,EAAAA,MAAM,CAACY,EAAP,CAAU,YAAV,EAAyBC,IAAD,IAAU;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EADgC,CAEhC;;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAJD;AAMAb,EAAAA,MAAM,CAACY,EAAP,CAAU,aAAV,EAAyB,MAAM;AAC7BE,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAT,IAAAA,QAAQ,CAACR,UAAU,EAAX,CAAR;AACD,GAHD;AAKA,sBACE;AAAA,4BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAMQ,QAAQ,CAACT,MAAM,CAACmB,IAAI,CAACC,MAAL,EAAD,CAAP,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,+BAAcV,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,EAOGG,KAAK,CAACQ,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBAAa;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBAA+BD,IAAI,CAACE;AAApC,OAA2BD,CAA3B;AAAA;AAAA;AAAA;AAAA,YAAvB,CAPH;AAAA,kBADF;AAWD,CA5BD;;GAAMf,G;UACaV,W,EACAC,W,EACHA,W;;;KAHVS,G;AA8BN,eAAeA,GAAf","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { select } from '../reducers/category';\nimport {fetchTeams} from '../reducers/quiz';\nimport { io } from 'socket.io-client';\n\nconst socket = io('ws://localhost:3000', {\n  reconnectionDelayMax: 10000,\n  withCredentials:      true,\n});\n\nsocket.emit('SCOREBOARD_CONNECT', {lobby: 'a'});\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const selected = useSelector(state => state.category.selected);\n  const teams = useSelector(state => state.quiz.teams);\n\n\n  socket.on('LOBBY_OPEN', (data) => {\n    console.log(\"A lobby was opened by a quiz master.\");\n    // TODO Get lobby ID from the database, display on the screen.\n    console.log(data);\n  });\n\n  socket.on('TEAM_JOINED', () => {\n    console.log(\"A team joined a game.\");\n    dispatch(fetchTeams())\n  });\n\n  return (\n    <>\n\n      <h1>Scoreboard</h1>\n\n      <button onClick={() => dispatch(select(Math.random()))}>Click here to increment</button>\n      <p>Selected: {selected}</p>\n      <h2>Alle teams</h2>\n      {teams.map((team, i) => <div className=\"mb-4\" key={i}>{team._id}</div>)}\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}