{"ast":null,"code":"import { io } from 'socket.io-client';\nlet ws;\n\nconst connect = lobby => ws.emit('SCOREBOARD_CONNECT', {\n  lobby\n});\n\nconst socket = (dispatch, state, history) => {\n  if (ws === undefined) {\n    ws = io('ws://localhost:3000', {\n      reconnectionDelayMax: 10000,\n      withCredentials: true\n    });\n  }\n\n  ws.off('message').on('message', ({\n    type,\n    payload\n  }) => {\n    switch (type) {\n      case 'TEAMS_CHANGED':\n        dispatch(fetchTeams());\n        break;\n\n      case 'TEAM_REMOVED':\n        dispatch(fetchTeams());\n        break;\n\n      default:\n        console.log('Socket.io message:', type, payload);\n    }\n  });\n};\n\nexport { connect, socket };","map":{"version":3,"sources":["/home/niels/Projects/school/quizzer/client/scoreboard/src/socket.js"],"names":["io","ws","connect","lobby","emit","socket","dispatch","state","history","undefined","reconnectionDelayMax","withCredentials","off","on","type","payload","fetchTeams","console","log"],"mappings":"AAAA,SAASA,EAAT,QAAmB,kBAAnB;AAEA,IAAIC,EAAJ;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAIF,EAAE,CAACG,IAAH,CAAQ,oBAAR,EAA8B;AAAED,EAAAA;AAAF,CAA9B,CAAzB;;AAEA,MAAME,MAAM,GAAG,CAACC,QAAD,EAAWC,KAAX,EAAkBC,OAAlB,KAA8B;AAC3C,MAAIP,EAAE,KAAKQ,SAAX,EAAsB;AACpBR,IAAAA,EAAE,GAAGD,EAAE,CAAC,qBAAD,EAAwB;AAAEU,MAAAA,oBAAoB,EAAE,KAAxB;AAA+BC,MAAAA,eAAe,EAAE;AAAhD,KAAxB,CAAP;AACD;;AAEDV,EAAAA,EAAE,CAACW,GAAH,CAAO,SAAP,EAAkBC,EAAlB,CAAqB,SAArB,EAAgC,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,KAAuB;AACrD,YAAQD,IAAR;AACE,WAAK,eAAL;AACER,QAAAA,QAAQ,CAACU,UAAU,EAAX,CAAR;AACA;;AACF,WAAK,cAAL;AACEV,QAAAA,QAAQ,CAACU,UAAU,EAAX,CAAR;AACA;;AACF;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCJ,IAAlC,EAAwCC,OAAxC;AARJ;AAUD,GAXD;AAYD,CAjBD;;AAmBA,SAASb,OAAT,EAAkBG,MAAlB","sourcesContent":["import { io } from 'socket.io-client';\n\nlet ws;\n\nconst connect = lobby => ws.emit('SCOREBOARD_CONNECT', { lobby });\n\nconst socket = (dispatch, state, history) => {\n  if (ws === undefined) {\n    ws = io('ws://localhost:3000', { reconnectionDelayMax: 10000, withCredentials: true });\n  }\n\n  ws.off('message').on('message', ({ type, payload }) => {\n    switch (type) {\n      case 'TEAMS_CHANGED':\n        dispatch(fetchTeams());\n        break;\n      case 'TEAM_REMOVED':\n        dispatch(fetchTeams());\n        break;\n      default:\n        console.log('Socket.io message:', type, payload);\n    }\n  });\n};\n\nexport { connect, socket };"]},"metadata":{},"sourceType":"module"}