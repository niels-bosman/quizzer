{"ast":null,"code":"import { io } from 'socket.io-client';\nimport { resetAll } from './reducers/quiz';\nimport { fetchTeams } from '../../quizmaster/src/reducers/quiz';\nlet ws;\n\nconst connect = lobbyId => {\n  ws.emit('TEAM_CONNECT', {\n    lobby: lobbyId\n  });\n};\n\nconst socket = (dispatch, state, history) => {\n  if (ws === undefined) {\n    ws = io('ws://localhost:3000', {\n      reconnectionDelayMax: 10000,\n      withCredentials: true\n    });\n  }\n\n  ws.off('message').on('message', ({\n    type,\n    payload\n  }) => {\n    switch (type) {\n      case 'TEAMS_CHANGED':\n        dispatch(fetchTeams());\n        break;\n\n      case 'TEAM_REMOVED':\n        dispatch(fetchTeams());\n        break;\n\n      default:\n        console.log('Socket.io message:', type, payload);\n    }\n  });\n};\n\nexport { connect, socket };","map":{"version":3,"sources":["/home/niels/Projects/school/quizzer/client/team/src/socket.js"],"names":["io","resetAll","fetchTeams","ws","connect","lobbyId","emit","lobby","socket","dispatch","state","history","undefined","reconnectionDelayMax","withCredentials","off","on","type","payload","console","log"],"mappings":"AAAA,SAASA,EAAT,QAAmB,kBAAnB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,UAAT,QAA2B,oCAA3B;AAGA,IAAIC,EAAJ;;AAEA,MAAMC,OAAO,GAAGC,OAAO,IAAI;AACzBF,EAAAA,EAAE,CAACG,IAAH,CAAQ,cAAR,EAAwB;AAAEC,IAAAA,KAAK,EAAEF;AAAT,GAAxB;AACD,CAFD;;AAIA,MAAMG,MAAM,GAAG,CAACC,QAAD,EAAWC,KAAX,EAAkBC,OAAlB,KAA8B;AAC3C,MAAIR,EAAE,KAAKS,SAAX,EAAsB;AACpBT,IAAAA,EAAE,GAAGH,EAAE,CAAC,qBAAD,EAAwB;AAAEa,MAAAA,oBAAoB,EAAE,KAAxB;AAA+BC,MAAAA,eAAe,EAAE;AAAhD,KAAxB,CAAP;AACD;;AAEDX,EAAAA,EAAE,CAACY,GAAH,CAAO,SAAP,EAAkBC,EAAlB,CAAqB,SAArB,EAAgC,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,KAAuB;AACrD,YAAQD,IAAR;AACE,WAAK,eAAL;AACER,QAAAA,QAAQ,CAACP,UAAU,EAAX,CAAR;AACA;;AACF,WAAK,cAAL;AACEO,QAAAA,QAAQ,CAACP,UAAU,EAAX,CAAR;AACA;;AACF;AACEiB,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCH,IAAlC,EAAwCC,OAAxC;AARJ;AAUD,GAXD;AAYD,CAjBD;;AAmBA,SAASd,OAAT,EAAkBI,MAAlB","sourcesContent":["import { io } from 'socket.io-client';\nimport { resetAll } from './reducers/quiz';\nimport { fetchTeams } from '../../quizmaster/src/reducers/quiz';\n\n\nlet ws;\n\nconst connect = lobbyId => {\n  ws.emit('TEAM_CONNECT', { lobby: lobbyId });\n};\n\nconst socket = (dispatch, state, history) => {\n  if (ws === undefined) {\n    ws = io('ws://localhost:3000', { reconnectionDelayMax: 10000, withCredentials: true });\n  }\n\n  ws.off('message').on('message', ({ type, payload }) => {\n    switch (type) {\n      case 'TEAMS_CHANGED':\n        dispatch(fetchTeams());\n        break;\n      case 'TEAM_REMOVED':\n        dispatch(fetchTeams());\n        break;\n      default:\n        console.log('Socket.io message:', type, payload);\n    }\n  });\n};\n\nexport { connect, socket };"]},"metadata":{},"sourceType":"module"}