{"ast":null,"code":"var _jsxFileName = \"/home/niels/Projects/school/quizzer/client/team/src/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { joinGame, setLobbyId, setTeamName } from '../reducers/quiz';\nimport { connect } from '../socket';\nimport Button from './Button';\nimport TextInput from './TextInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    teamName,\n    lobbyId\n  } = useSelector(({\n    quiz\n  }) => quiz);\n  const history = useHistory();\n  const [error, setError] = useState('');\n  const [codeValid, setCodeValid] = useState(true);\n  const [teamValid, setTeamValid] = useState(true);\n\n  const submit = async event => {\n    event.preventDefault();\n    const {\n      payload\n    } = await dispatch(joinGame({\n      lobbyId,\n      teamName\n    }));\n\n    switch (payload.status) {\n      case 400:\n        setError('Er bestaat geen game met deze code.');\n        setCodeValid(false);\n        break;\n\n      case 403:\n        setError('Team naam is al gekozen, kies een andere.');\n        setTeamValid(false);\n        break;\n\n      default:\n        setTeamValid(true);\n        setCodeValid(true);\n        connect(lobbyId);\n        history.push('/wait');\n    }\n  };\n\n  const valid = lobbyId !== '' && teamName !== '';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submit,\n    children: [error !== '' && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      error: !codeValid,\n      label: \"Quiz-code\",\n      value: lobbyId,\n      onChange: e => dispatch(setLobbyId(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      error: !teamValid,\n      label: \"Teamnaam\",\n      value: teamName,\n      onChange: e => dispatch(setTeamName(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: !valid,\n      type: \"submit\",\n      children: \"Meedoen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"DLqluu8KE5gt3hojBAhzERYfRF4=\", false, function () {\n  return [useDispatch, useSelector, useHistory];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/niels/Projects/school/quizzer/client/team/src/components/LoginForm.js"],"names":["useState","useDispatch","useSelector","useHistory","joinGame","setLobbyId","setTeamName","connect","Button","TextInput","LoginForm","dispatch","teamName","lobbyId","quiz","history","error","setError","codeValid","setCodeValid","teamValid","setTeamValid","submit","event","preventDefault","payload","status","push","valid","e","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { joinGame, setLobbyId, setTeamName } from '../reducers/quiz';\nimport { connect } from '../socket';\nimport Button from './Button';\nimport TextInput from './TextInput';\n\nconst LoginForm = () => {\n  const dispatch                  = useDispatch();\n  const { teamName, lobbyId }     = useSelector(({ quiz }) => quiz);\n  const history                   = useHistory();\n  const [error, setError]         = useState('');\n  const [codeValid, setCodeValid] = useState(true);\n  const [teamValid, setTeamValid] = useState(true);\n\n  const submit = async event => {\n    event.preventDefault();\n\n    const { payload } = await dispatch(joinGame({ lobbyId, teamName }));\n\n    switch (payload.status) {\n      case 400:\n        setError('Er bestaat geen game met deze code.');\n        setCodeValid(false);\n        break;\n      case 403:\n        setError('Team naam is al gekozen, kies een andere.');\n        setTeamValid(false);\n        break;\n      default:\n        setTeamValid(true);\n        setCodeValid(true);\n        connect(lobbyId);\n        history.push('/wait');\n    }\n  };\n\n  const valid = lobbyId !== '' && teamName !== '';\n\n  return (\n    <form onSubmit={submit}>\n      {error !== '' && <p className=\"error-message\">{error}</p>}\n      <TextInput\n        error={!codeValid}\n        label=\"Quiz-code\"\n        value={lobbyId}\n        onChange={e => dispatch(setLobbyId(e.target.value))}\n      />\n      <TextInput\n        error={!teamValid}\n        label=\"Teamnaam\"\n        value={teamName}\n        onChange={e => dispatch(setTeamName(e.target.value))}\n      />\n      <Button disabled={!valid} type=\"submit\">Meedoen</Button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}