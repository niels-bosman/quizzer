{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  loading: false,\n  teamName: '',\n  lobbyId: ''\n};\nexport const joinGame = createAsyncThunk('quiz/joinGameStatus', async ({\n  lobbyId,\n  teamName\n}) => {\n  const response = await axios.post(`${process.env.REACT_APP_API_URI}/lobbies/${lobbyId}/teams`, {\n    teamName: teamName\n  }).catch(error => {\n    return {\n      'data': error.response.data,\n      'status': error.response.status\n    };\n  });\n  return {\n    'data': response.data,\n    'status': response.status\n  };\n});\nexport const slice = createSlice({\n  name: 'quiz',\n  initialState,\n  reducers: {\n    setLobbyId: (state, {\n      payload\n    }) => {\n      state.lobbyId = payload;\n    },\n    setTeamName: (state, {\n      payload\n    }) => {\n      state.teamName = payload;\n    }\n  },\n  extraReducers: {\n    [joinGame.pending]: state => {\n      state.loading = true;\n    },\n    [joinGame.fulfilled]: state => {\n      state.loading = false;\n    },\n    [joinGame.rejected]: state => {\n      state.loading = false;\n    }\n  }\n});\nexport const {\n  setLobbyId,\n  setTeamName\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"sources":["/home/niels/Projects/school/quizzer/client/team/src/reducers/quiz.js"],"names":["createAsyncThunk","createSlice","axios","initialState","loading","teamName","lobbyId","joinGame","response","post","process","env","REACT_APP_API_URI","catch","error","data","status","slice","name","reducers","setLobbyId","state","payload","setTeamName","extraReducers","pending","fulfilled","rejected","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAG,KADS;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,OAAO,EAAG;AAHS,CAArB;AAOA,OAAO,MAAMC,QAAQ,GAAGP,gBAAgB,CACtC,qBADsC,EAEtC,OAAO;AAAEM,EAAAA,OAAF;AAAWD,EAAAA;AAAX,CAAP,KAAiC;AAC/B,QAAMG,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,YAAWN,OAAQ,QAA/D,EAAwE;AAC7FD,IAAAA,QAAQ,EAAEA;AADmF,GAAxE,EAEpBQ,KAFoB,CAEbC,KAAD,IAAW;AAClB,WAAO;AAAC,cAAQA,KAAK,CAACN,QAAN,CAAeO,IAAxB;AAA8B,gBAAUD,KAAK,CAACN,QAAN,CAAeQ;AAAvD,KAAP;AACD,GAJsB,CAAvB;AAMA,SAAO;AAAC,YAAQR,QAAQ,CAACO,IAAlB;AAAwB,cAAUP,QAAQ,CAACQ;AAA3C,GAAP;AACD,CAVqC,CAAjC;AAaP,OAAO,MAAMC,KAAK,GAAGhB,WAAW,CAAC;AAC/BiB,EAAAA,IAAI,EAAW,MADgB;AAE/Bf,EAAAA,YAF+B;AAG/BgB,EAAAA,QAAQ,EAAO;AACbC,IAAAA,UAAU,EAAG,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACnCD,MAAAA,KAAK,CAACf,OAAN,GAAgBgB,OAAhB;AACD,KAHY;AAIbC,IAAAA,WAAW,EAAE,CAACF,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACnCD,MAAAA,KAAK,CAAChB,QAAN,GAAiBiB,OAAjB;AACD;AANY,GAHgB;AAW/BE,EAAAA,aAAa,EAAE;AACb,KAACjB,QAAQ,CAACkB,OAAV,GAAsBJ,KAAK,IAAI;AAC7BA,MAAAA,KAAK,CAACjB,OAAN,GAAgB,IAAhB;AACD,KAHY;AAIb,KAACG,QAAQ,CAACmB,SAAV,GAAsBL,KAAK,IAAI;AAC7BA,MAAAA,KAAK,CAACjB,OAAN,GAAgB,KAAhB;AACD,KANY;AAOb,KAACG,QAAQ,CAACoB,QAAV,GAAsBN,KAAK,IAAI;AAC7BA,MAAAA,KAAK,CAACjB,OAAN,GAAgB,KAAhB;AACD;AATY;AAXgB,CAAD,CAAzB;AAwBP,OAAO,MAAM;AAAEgB,EAAAA,UAAF;AAAcG,EAAAA;AAAd,IAA8BN,KAAK,CAACW,OAA1C;AAEP,eAAeX,KAAK,CAACY,OAArB","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst initialState = {\n  loading:  false,\n  teamName: '',\n  lobbyId:  ''\n};\n\n\nexport const joinGame = createAsyncThunk(\n  'quiz/joinGameStatus',\n  async ({ lobbyId, teamName }) => {\n    const response = await axios.post(`${process.env.REACT_APP_API_URI}/lobbies/${lobbyId}/teams`, {\n      teamName: teamName\n    }).catch((error) => {\n      return {'data': error.response.data, 'status': error.response.status};\n    });\n\n    return {'data': response.data, 'status': response.status};\n  }\n);\n\nexport const slice = createSlice({\n  name:          'quiz',\n  initialState,\n  reducers:      {\n    setLobbyId:  (state, { payload }) => {\n      state.lobbyId = payload;\n    },\n    setTeamName: (state, { payload }) => {\n      state.teamName = payload;\n    }\n  },\n  extraReducers: {\n    [joinGame.pending]:   state => {\n      state.loading = true;\n    },\n    [joinGame.fulfilled]: state => {\n      state.loading = false;\n    },\n    [joinGame.rejected]:  state => {\n      state.loading = false;\n    },\n  },\n});\n\nexport const { setLobbyId, setTeamName } = slice.actions;\n\nexport default slice.reducer;"]},"metadata":{},"sourceType":"module"}