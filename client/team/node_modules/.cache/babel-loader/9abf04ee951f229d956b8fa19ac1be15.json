{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { BASE_URL } from '../api';\nconst initialState = {\n  teamName: '',\n  lobbyId: '',\n  question: ''\n};\nexport const joinGame = createAsyncThunk('quiz/joinGameStatus', async ({\n  lobbyId,\n  teamName\n}) => {\n  try {\n    const {\n      status\n    } = await axios.post(`${BASE_URL}/lobbies/${lobbyId}/teams`, {\n      teamName\n    });\n    return {\n      status\n    };\n  } catch ({\n    response: {\n      status\n    }\n  }) {\n    return {\n      status\n    };\n  }\n});\nexport const getQuestion = createAsyncThunk('quiz/getQuestionStatus', async ({\n  lobbyId\n}) => {\n  console.log(\"in getQuestion\");\n  const response = await axios.get(`${process.env.REACT_APP_API_URI}/lobbies/${lobbyId}/question`).catch(error => {\n    return {\n      'data': error.response.data,\n      'status': error.response.status\n    };\n  });\n  return {\n    'data': response.data,\n    'status': response.status\n  };\n});\nexport const slice = createSlice({\n  name: 'quiz',\n  initialState,\n  reducers: {\n    setLobbyId: (state, {\n      payload\n    }) => {\n      state.lobbyId = payload;\n    },\n    setTeamName: (state, {\n      payload\n    }) => {\n      state.teamName = payload;\n    }\n  },\n  extraReducers: {\n    [joinGame.pending]: state => {\n      state.loading = true;\n    },\n    [joinGame.fulfilled]: state => {\n      state.loading = false;\n    },\n    [joinGame.rejected]: state => {\n      state.loading = false;\n    },\n    [getQuestion.fulfilled]: (state, {\n      payload\n    }) => {\n      state.question = payload.data.question;\n    }\n  }\n});\nexport const {\n  setLobbyId,\n  setTeamName\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"sources":["/home/niels/Projects/school/quizzer/client/team/src/reducers/quiz.js"],"names":["createAsyncThunk","createSlice","axios","BASE_URL","initialState","teamName","lobbyId","question","joinGame","status","post","response","getQuestion","console","log","get","process","env","REACT_APP_API_URI","catch","error","data","slice","name","reducers","setLobbyId","state","payload","setTeamName","extraReducers","pending","loading","fulfilled","rejected","actions","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { BASE_URL } from '../api';\n\nconst initialState = {\n  teamName: '',\n  lobbyId:  '',\n  question: ''\n};\n\n\nexport const joinGame = createAsyncThunk('quiz/joinGameStatus', async ({ lobbyId, teamName }) => {\n    try {\n      const { status } = await axios.post(`${BASE_URL}/lobbies/${lobbyId}/teams`, { teamName });\n      return { status };\n    } catch ({ response: { status } }) {\n      return { status };\n    }\n  }\n);\n\nexport const getQuestion = createAsyncThunk(\n  'quiz/getQuestionStatus',\n  async ({ lobbyId }) => {\n\n    console.log(\"in getQuestion\");\n\n    const response = await axios.get(`${process.env.REACT_APP_API_URI}/lobbies/${lobbyId}/question`)\n      .catch((error) => {\n      return {'data': error.response.data, 'status': error.response.status};\n    });\n\n    return {'data': response.data, 'status': response.status};\n  }\n);\n\nexport const slice = createSlice({\n  name:          'quiz',\n  initialState,\n  reducers:      {\n    setLobbyId:  (state, { payload }) => {\n      state.lobbyId = payload;\n    },\n    setTeamName: (state, { payload }) => {\n      state.teamName = payload;\n    }\n  },\n  extraReducers: {\n    [joinGame.pending]:   state => {\n      state.loading = true;\n    },\n    [joinGame.fulfilled]: state => {\n      state.loading = false;\n    },\n    [joinGame.rejected]:  state => {\n      state.loading = false;\n    },\n    [getQuestion.fulfilled]: (state, { payload }) => {\n      state.question = payload.data.question;\n    },\n  },\n});\n\nexport const { setLobbyId, setTeamName } = slice.actions;\n\nexport default slice.reducer;"]},"metadata":{},"sourceType":"module"}