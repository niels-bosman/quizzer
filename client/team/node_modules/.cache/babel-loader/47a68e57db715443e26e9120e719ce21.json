{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { BASE_URL } from '../api';\nconst initialState = {\n  loading: false,\n  teamName: '',\n  lobbyId: ''\n};\nexport const joinGame = createAsyncThunk('quiz/joinGameStatus', async ({\n  lobbyId,\n  teamName\n}) => {\n  try {\n    const {\n      data,\n      status\n    } = await axios.post(`${BASE_URL}/lobbies/${lobbyId}/teams`, {\n      teamName\n    });\n    return {\n      data,\n      status\n    };\n  } catch (error) {\n    console.log(error.status);\n    return error;\n  }\n});\nexport const slice = createSlice({\n  name: 'quiz',\n  initialState,\n  reducers: {\n    setLobbyId: (state, {\n      payload\n    }) => {\n      state.lobbyId = payload;\n    },\n    setTeamName: (state, {\n      payload\n    }) => {\n      state.teamName = payload;\n    }\n  },\n  extraReducers: {\n    [joinGame.pending]: state => {\n      state.loading = true;\n    },\n    [joinGame.fulfilled]: state => {\n      state.loading = false;\n    },\n    [joinGame.rejected]: state => {\n      state.loading = false;\n    }\n  }\n});\nexport const {\n  setLobbyId,\n  setTeamName\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"sources":["/home/niels/Projects/school/quizzer/client/team/src/reducers/quiz.js"],"names":["createAsyncThunk","createSlice","axios","BASE_URL","initialState","loading","teamName","lobbyId","joinGame","data","status","post","error","console","log","slice","name","reducers","setLobbyId","state","payload","setTeamName","extraReducers","pending","fulfilled","rejected","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,QAAzB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAG,KADS;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,OAAO,EAAG;AAHS,CAArB;AAOA,OAAO,MAAMC,QAAQ,GAAGR,gBAAgB,CAAC,qBAAD,EAAwB,OAAO;AAAEO,EAAAA,OAAF;AAAWD,EAAAA;AAAX,CAAP,KAAiC;AAC7F,MAAI;AACF,UAAM;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,MAAMR,KAAK,CAACS,IAAN,CAAY,GAAER,QAAS,YAAWI,OAAQ,QAA1C,EAAmD;AAAED,MAAAA;AAAF,KAAnD,CAA/B;AACA,WAAO;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAP;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACF,MAAlB;AACA,WAAOE,KAAP;AACD;AACF,CARqC,CAAjC;AAWP,OAAO,MAAMG,KAAK,GAAGd,WAAW,CAAC;AAC/Be,EAAAA,IAAI,EAAW,MADgB;AAE/BZ,EAAAA,YAF+B;AAG/Ba,EAAAA,QAAQ,EAAO;AACbC,IAAAA,UAAU,EAAG,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACnCD,MAAAA,KAAK,CAACZ,OAAN,GAAgBa,OAAhB;AACD,KAHY;AAIbC,IAAAA,WAAW,EAAE,CAACF,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACnCD,MAAAA,KAAK,CAACb,QAAN,GAAiBc,OAAjB;AACD;AANY,GAHgB;AAW/BE,EAAAA,aAAa,EAAE;AACb,KAACd,QAAQ,CAACe,OAAV,GAAsBJ,KAAK,IAAI;AAC7BA,MAAAA,KAAK,CAACd,OAAN,GAAgB,IAAhB;AACD,KAHY;AAIb,KAACG,QAAQ,CAACgB,SAAV,GAAsBL,KAAK,IAAI;AAC7BA,MAAAA,KAAK,CAACd,OAAN,GAAgB,KAAhB;AACD,KANY;AAOb,KAACG,QAAQ,CAACiB,QAAV,GAAsBN,KAAK,IAAI;AAC7BA,MAAAA,KAAK,CAACd,OAAN,GAAgB,KAAhB;AACD;AATY;AAXgB,CAAD,CAAzB;AAwBP,OAAO,MAAM;AAAEa,EAAAA,UAAF;AAAcG,EAAAA;AAAd,IAA8BN,KAAK,CAACW,OAA1C;AAEP,eAAeX,KAAK,CAACY,OAArB","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { BASE_URL } from '../api';\n\nconst initialState = {\n  loading:  false,\n  teamName: '',\n  lobbyId:  ''\n};\n\n\nexport const joinGame = createAsyncThunk('quiz/joinGameStatus', async ({ lobbyId, teamName }) => {\n    try {\n      const { data, status } = await axios.post(`${BASE_URL}/lobbies/${lobbyId}/teams`, { teamName });\n      return { data, status };\n    } catch (error) {\n      console.log(error.status)\n      return error;\n    }\n  }\n);\n\nexport const slice = createSlice({\n  name:          'quiz',\n  initialState,\n  reducers:      {\n    setLobbyId:  (state, { payload }) => {\n      state.lobbyId = payload;\n    },\n    setTeamName: (state, { payload }) => {\n      state.teamName = payload;\n    }\n  },\n  extraReducers: {\n    [joinGame.pending]:   state => {\n      state.loading = true;\n    },\n    [joinGame.fulfilled]: state => {\n      state.loading = false;\n    },\n    [joinGame.rejected]:  state => {\n      state.loading = false;\n    },\n  },\n});\n\nexport const { setLobbyId, setTeamName } = slice.actions;\n\nexport default slice.reducer;"]},"metadata":{},"sourceType":"module"}