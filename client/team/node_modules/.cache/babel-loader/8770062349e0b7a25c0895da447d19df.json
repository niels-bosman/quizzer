{"ast":null,"code":"var _jsxFileName = \"/home/niels/Projects/school/quizzer/client/team/src/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { joinGame, setLobbyId, setTeamName } from '../reducers/quiz';\nimport { connect, sendMessage } from '../socket';\nimport Button from './Button';\nimport TextInput from './TextInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const teamName = useSelector(state => state.quiz.teamName);\n  const lobbyId = useSelector(state => state.quiz.lobbyId);\n  const loading = useSelector(state => state.quiz.loading);\n  const history = useHistory();\n  const [error, setError] = useState('');\n\n  const submit = async event => {\n    event.preventDefault();\n    const {\n      payload\n    } = await dispatch(joinGame({\n      lobbyId,\n      teamName\n    }));\n    const lobbyId = payload.data;\n\n    switch (payload.status) {\n      case 400:\n        setError('Er bestaat geen game met deze code.');\n        break;\n\n      case 403:\n        setError('Team naam is al gekozen, kies een andere.');\n        break;\n\n      default:\n        connect(lobbyId);\n        history.push('/question');\n    }\n  };\n\n  const valid = lobbyId !== '' && teamName !== '';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submit,\n    children: [loading && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Aan het laden...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      label: \"Code\",\n      value: lobbyId,\n      onChange: e => dispatch(setLobbyId(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      label: \"Team naam\",\n      value: teamName,\n      onChange: e => dispatch(setTeamName(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: !valid,\n      type: \"submit\",\n      children: \"Meedoen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"df2G8Ajk0CXbqfNNEI2JE6sE87c=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useHistory];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/niels/Projects/school/quizzer/client/team/src/components/LoginForm.js"],"names":["useState","useDispatch","useSelector","useHistory","joinGame","setLobbyId","setTeamName","connect","sendMessage","Button","TextInput","LoginForm","dispatch","teamName","state","quiz","lobbyId","loading","history","error","setError","submit","event","preventDefault","payload","data","status","push","valid","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,WAA/B,QAAkD,kBAAlD;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,WAArC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,QAAQ,GAAYX,WAAW,EAArC;AACA,QAAMY,QAAQ,GAAYX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,QAArB,CAArC;AACA,QAAMG,OAAO,GAAad,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,OAArB,CAArC;AACA,QAAMC,OAAO,GAAaf,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWE,OAArB,CAArC;AACA,QAAMC,OAAO,GAAaf,UAAU,EAApC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMqB,MAAM,GAAG,MAAMC,KAAN,IAAe;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAc,MAAMZ,QAAQ,CAACR,QAAQ,CAAC;AAAEY,MAAAA,OAAF;AAAWH,MAAAA;AAAX,KAAD,CAAT,CAAlC;AACA,UAAMG,OAAO,GAAGQ,OAAO,CAACC,IAAxB;;AAEA,YAAQD,OAAO,CAACE,MAAhB;AACE,WAAK,GAAL;AACEN,QAAAA,QAAQ,CAAC,qCAAD,CAAR;AACA;;AACF,WAAK,GAAL;AACEA,QAAAA,QAAQ,CAAC,2CAAD,CAAR;AACA;;AACF;AACEb,QAAAA,OAAO,CAACS,OAAD,CAAP;AACAE,QAAAA,OAAO,CAACS,IAAR,CAAa,WAAb;AATJ;AAYD,GAlBD;;AAoBA,QAAMC,KAAK,GAAGZ,OAAO,KAAK,EAAZ,IAAkBH,QAAQ,KAAK,EAA7C;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEQ,MAAhB;AAAA,eACGJ,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADd,eAGE;AAAA,gBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC,MAAjB;AAAwB,MAAA,KAAK,EAAEH,OAA/B;AAAwC,MAAA,QAAQ,EAAEa,CAAC,IAAIjB,QAAQ,CAACP,UAAU,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AAA/D;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC,WAAjB;AAA6B,MAAA,KAAK,EAAElB,QAApC;AAA8C,MAAA,QAAQ,EAAEgB,CAAC,IAAIjB,QAAQ,CAACN,WAAW,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AAArE;AAAA;AAAA;AAAA;AAAA,YANF,eAQE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,CAACH,KAAnB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA3CD;;GAAMjB,S;UACsBV,W,EACAC,W,EACAA,W,EACAA,W,EACAC,U;;;KALtBQ,S;AA6CN,eAAeA,SAAf","sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { joinGame, setLobbyId, setTeamName } from '../reducers/quiz';\nimport { connect, sendMessage } from '../socket';\nimport Button from './Button';\nimport TextInput from './TextInput';\n\nconst LoginForm = () => {\n  const dispatch          = useDispatch();\n  const teamName          = useSelector(state => state.quiz.teamName);\n  const lobbyId           = useSelector(state => state.quiz.lobbyId);\n  const loading           = useSelector(state => state.quiz.loading);\n  const history           = useHistory();\n  const [error, setError] = useState('');\n\n  const submit = async event => {\n    event.preventDefault();\n\n    const { payload } = await dispatch(joinGame({ lobbyId, teamName }));\n    const lobbyId = payload.data;\n\n    switch (payload.status) {\n      case 400:\n        setError('Er bestaat geen game met deze code.');\n        break;\n      case 403:\n        setError('Team naam is al gekozen, kies een andere.');\n        break;\n      default:\n        connect(lobbyId);\n        history.push('/question');\n    }\n\n  };\n\n  const valid = lobbyId !== '' && teamName !== '';\n\n  return (\n    <form onSubmit={submit}>\n      {loading && <h1>Aan het laden...</h1>}\n\n      <h2>{error}</h2>\n\n      <TextInput label=\"Code\" value={lobbyId} onChange={e => dispatch(setLobbyId(e.target.value))} />\n      <TextInput label=\"Team naam\" value={teamName} onChange={e => dispatch(setTeamName(e.target.value))} />\n\n      <Button disabled={!valid} type=\"submit\">Meedoen</Button>\n\n    </form>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}