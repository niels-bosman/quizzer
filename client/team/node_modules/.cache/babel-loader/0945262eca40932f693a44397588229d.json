{"ast":null,"code":"var _jsxFileName = \"/home/niels/Projects/school/quizzer/client/team/src/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport TextInput from './TextInput';\nimport Button from './Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { joinGame, setLobbyId, setTeamName } from '../reducers/quiz';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const teamName = useSelector(state => state.quiz.teamName);\n  const lobbyId = useSelector(state => state.quiz.lobbyId);\n  const loading = useSelector(state => state.quiz.loading);\n  const history = useHistory();\n  const [error, setError] = useState('');\n\n  const submit = async event => {\n    event.preventDefault();\n    const response = await dispatch(joinGame({\n      lobbyId,\n      teamName\n    }));\n\n    if (response.payload.error) {}\n\n    console.log(response);\n\n    if (response.payload.status === 400) {\n      setError('Er bestaat geen game met deze code.');\n    } else if (response.payload.status === 403) {\n      setError('Team naam is al gekozen, kies een andere.');\n    } else if (response.payload.status === 203) {\n      history.push('/question');\n    } else {\n      setError('Onbekende fout.');\n    }\n  };\n\n  const valid = lobbyId !== '' && teamName !== '';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submit,\n    children: [loading && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Aan het laden...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      label: \"Code\",\n      value: lobbyId,\n      onChange: e => dispatch(setLobbyId(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      label: \"Team naam\",\n      value: teamName,\n      onChange: e => dispatch(setTeamName(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: !valid,\n      type: \"submit\",\n      children: \"Meedoen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"df2G8Ajk0CXbqfNNEI2JE6sE87c=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useHistory];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/niels/Projects/school/quizzer/client/team/src/components/LoginForm.js"],"names":["useState","TextInput","Button","useDispatch","useSelector","joinGame","setLobbyId","setTeamName","useHistory","LoginForm","dispatch","teamName","state","quiz","lobbyId","loading","history","error","setError","submit","event","preventDefault","response","payload","console","log","status","push","valid","e","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport TextInput from './TextInput';\nimport Button from './Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { joinGame, setLobbyId, setTeamName } from '../reducers/quiz';\nimport { useHistory } from 'react-router-dom';\n\nconst LoginForm = () => {\n  const dispatch          = useDispatch();\n  const teamName          = useSelector(state => state.quiz.teamName);\n  const lobbyId           = useSelector(state => state.quiz.lobbyId);\n  const loading           = useSelector(state => state.quiz.loading);\n  const history           = useHistory();\n  const [error, setError] = useState('');\n\n  const submit = async event => {\n    event.preventDefault();\n\n    const response = await dispatch(joinGame({ lobbyId, teamName }));\n\n    if (response.payload.error) {\n\n    }\n\n    console.log(response);\n\n    if (response.payload.status === 400) {\n      setError('Er bestaat geen game met deze code.');\n    } else if (response.payload.status === 403) {\n      setError('Team naam is al gekozen, kies een andere.');\n    } else if (response.payload.status === 203) {\n      history.push('/question');\n    } else {\n      setError('Onbekende fout.');\n    }\n\n  };\n\n  const valid = lobbyId !== '' && teamName !== '';\n\n  return (\n    <form onSubmit={submit}>\n      {loading && <h1>Aan het laden...</h1>}\n\n      <h2>{error}</h2>\n\n      <TextInput label=\"Code\" value={lobbyId} onChange={e => dispatch(setLobbyId(e.target.value))}/>\n      <TextInput label=\"Team naam\" value={teamName} onChange={e => dispatch(setTeamName(e.target.value))}/>\n\n      <Button disabled={!valid} type=\"submit\">Meedoen</Button>\n\n    </form>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}