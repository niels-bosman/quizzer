{"ast":null,"code":"import { io } from 'socket.io-client';\nimport { resetAll, resetGivenAnswer } from './reducers/quiz';\nlet ws;\n\nconst connect = lobby => ws.emit('TEAM_CONNECT', {\n  lobby\n});\n\nconst disconnect = lobby => ws.emit('TEAM_DISCONNECT', {\n  lobby\n});\n\nconst socket = (dispatch, state, history) => {\n  if (ws === undefined) {\n    ws = io('ws://localhost:3000', {\n      reconnectionDelayMax: 10000,\n      withCredentials: true\n    });\n  }\n\n  ws.off('message').on('message', ({\n    type,\n    payload\n  }) => {\n    switch (type) {\n      case 'TEAM_REMOVED':\n        if (payload.teamId === state.quiz.teamName) {\n          disconnect(state.quiz.lobbyId);\n          dispatch(resetAll());\n          history.push('/');\n        }\n\n        break;\n\n      case 'NEW_QUESTION':\n        dispatch(resetGivenAnswer());\n        history.push('/question');\n        break;\n\n      case 'QUESTION_CLOSED':\n        history.push('/question/closed');\n        break;\n\n      case 'LOBBY_FINISHED':\n        disconnect(state.quiz.lobbyId);\n        dispatch(resetAll());\n        history.push('/');\n        break;\n\n      case 'ROUND_FINISHED':\n        history.push('/round-finished');\n        break;\n    }\n  });\n};\n\nexport { connect, socket };","map":{"version":3,"sources":["/home/niels/Projects/school/quizzer/client/team/src/socket.js"],"names":["io","resetAll","resetGivenAnswer","ws","connect","lobby","emit","disconnect","socket","dispatch","state","history","undefined","reconnectionDelayMax","withCredentials","off","on","type","payload","teamId","quiz","teamName","lobbyId","push"],"mappings":"AAAA,SAASA,EAAT,QAAmB,kBAAnB;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,iBAA3C;AAEA,IAAIC,EAAJ;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAIF,EAAE,CAACG,IAAH,CAAQ,cAAR,EAAwB;AAAED,EAAAA;AAAF,CAAxB,CAAzB;;AAEA,MAAME,UAAU,GAAGF,KAAK,IAAIF,EAAE,CAACG,IAAH,CAAQ,iBAAR,EAA2B;AAAED,EAAAA;AAAF,CAA3B,CAA5B;;AAEA,MAAMG,MAAM,GAAG,CAACC,QAAD,EAAWC,KAAX,EAAkBC,OAAlB,KAA8B;AAC3C,MAAIR,EAAE,KAAKS,SAAX,EAAsB;AACpBT,IAAAA,EAAE,GAAGH,EAAE,CAAC,qBAAD,EAAwB;AAAEa,MAAAA,oBAAoB,EAAE,KAAxB;AAA+BC,MAAAA,eAAe,EAAE;AAAhD,KAAxB,CAAP;AACD;;AAEDX,EAAAA,EAAE,CAACY,GAAH,CAAO,SAAP,EAAkBC,EAAlB,CAAqB,SAArB,EAAgC,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,KAAuB;AACrD,YAAQD,IAAR;AACE,WAAK,cAAL;AACE,YAAIC,OAAO,CAACC,MAAR,KAAmBT,KAAK,CAACU,IAAN,CAAWC,QAAlC,EAA4C;AAC1Cd,UAAAA,UAAU,CAACG,KAAK,CAACU,IAAN,CAAWE,OAAZ,CAAV;AACAb,UAAAA,QAAQ,CAACR,QAAQ,EAAT,CAAR;AACAU,UAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;AACD;;AACD;;AACF,WAAK,cAAL;AACEd,QAAAA,QAAQ,CAACP,gBAAgB,EAAjB,CAAR;AACAS,QAAAA,OAAO,CAACY,IAAR,CAAa,WAAb;AACA;;AACF,WAAK,iBAAL;AACEZ,QAAAA,OAAO,CAACY,IAAR,CAAa,kBAAb;AACA;;AACF,WAAK,gBAAL;AACEhB,QAAAA,UAAU,CAACG,KAAK,CAACU,IAAN,CAAWE,OAAZ,CAAV;AACAb,QAAAA,QAAQ,CAACR,QAAQ,EAAT,CAAR;AACAU,QAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;AACA;;AACF,WAAK,gBAAL;AACEZ,QAAAA,OAAO,CAACY,IAAR,CAAa,iBAAb;AACA;AAtBJ;AAwBD,GAzBD;AA0BD,CA/BD;;AAiCA,SAASnB,OAAT,EAAkBI,MAAlB","sourcesContent":["import { io } from 'socket.io-client';\nimport { resetAll, resetGivenAnswer } from './reducers/quiz';\n\nlet ws;\n\nconst connect = lobby => ws.emit('TEAM_CONNECT', { lobby });\n\nconst disconnect = lobby => ws.emit('TEAM_DISCONNECT', { lobby });\n\nconst socket = (dispatch, state, history) => {\n  if (ws === undefined) {\n    ws = io('ws://localhost:3000', { reconnectionDelayMax: 10000, withCredentials: true });\n  }\n\n  ws.off('message').on('message', ({ type, payload }) => {\n    switch (type) {\n      case 'TEAM_REMOVED':\n        if (payload.teamId === state.quiz.teamName) {\n          disconnect(state.quiz.lobbyId);\n          dispatch(resetAll());\n          history.push('/');\n        }\n        break;\n      case 'NEW_QUESTION':\n        dispatch(resetGivenAnswer());\n        history.push('/question');\n        break;\n      case 'QUESTION_CLOSED':\n        history.push('/question/closed');\n        break;\n      case 'LOBBY_FINISHED':\n        disconnect(state.quiz.lobbyId);\n        dispatch(resetAll());\n        history.push('/');\n        break;\n      case 'ROUND_FINISHED':\n        history.push('/round-finished');\n        break;\n    }\n  });\n};\n\nexport { connect, socket };"]},"metadata":{},"sourceType":"module"}