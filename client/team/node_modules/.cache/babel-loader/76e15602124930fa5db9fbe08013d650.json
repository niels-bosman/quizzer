{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  teamName: '',\n  lobbyCode: ''\n};\nconst joinGame = createAsyncThunk('quiz/joinGameStatus', async (userId, thunkAPI) => {});\nexport const slice = createSlice({\n  name: 'quiz',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    // Add reducers for additional action types here, and handle loading state as needed\n    builder.addCase(joinGame.fulfilled, (state, action) => {\n      // Add user to the state array\n      state.entities.push(action.payload);\n    });\n  }\n});\nexport const {} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"sources":["/home/niels/Projects/school/quizzer/client/team/src/reducers/quiz-reducer.js"],"names":["createAsyncThunk","createSlice","initialState","teamName","lobbyCode","joinGame","userId","thunkAPI","slice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","entities","push","payload","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAG,EADQ;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAArB;AAKA,MAAMC,QAAQ,GAAGL,gBAAgB,CAC/B,qBAD+B,EAE/B,OAAOM,MAAP,EAAeC,QAAf,KAA4B,CAE3B,CAJ8B,CAAjC;AAOA,OAAO,MAAMC,KAAK,GAAGP,WAAW,CAAC;AAC/BQ,EAAAA,IAAI,EAAW,MADgB;AAE/BP,EAAAA,YAF+B;AAG/BQ,EAAAA,QAAQ,EAAO,EAHgB;AAI/BC,EAAAA,aAAa,EAAGC,OAAO,IAAI;AACzB;AACAA,IAAAA,OAAO,CAACC,OAAR,CAAgBR,QAAQ,CAACS,SAAzB,EAAoC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrD;AACAD,MAAAA,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBF,MAAM,CAACG,OAA3B;AACD,KAHD;AAID;AAV8B,CAAD,CAAzB;AAaP,OAAO,MAAM,KAAKX,KAAK,CAACY,OAAjB;AAEP,eAAeZ,KAAK,CAACa,OAArB","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  teamName:  '',\n  lobbyCode: ''\n};\n\nconst joinGame = createAsyncThunk(\n  'quiz/joinGameStatus',\n  async (userId, thunkAPI) => {\n\n  }\n);\n\nexport const slice = createSlice({\n  name:          'quiz',\n  initialState,\n  reducers:      {},\n  extraReducers: (builder => {\n    // Add reducers for additional action types here, and handle loading state as needed\n    builder.addCase(joinGame.fulfilled, (state, action) => {\n      // Add user to the state array\n      state.entities.push(action.payload);\n    });\n  })\n});\n\nexport const {} = slice.actions;\n\nexport default slice.reducer;"]},"metadata":{},"sourceType":"module"}