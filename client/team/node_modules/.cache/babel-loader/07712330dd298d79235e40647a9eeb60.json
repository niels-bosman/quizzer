{"ast":null,"code":"import { io } from 'socket.io-client';\nimport { resetAll } from './reducers/quiz';\nlet ws;\n\nconst connect = lobby => ws.emit('TEAM_CONNECT', {\n  lobby\n});\n\nconst socket = (dispatch, state, history) => {\n  if (ws === undefined) {\n    ws = io('ws://localhost:3000', {\n      reconnectionDelayMax: 10000,\n      withCredentials: true\n    });\n  }\n\n  ws.off('message').on('message', ({\n    type,\n    payload\n  }) => {\n    switch (type) {\n      case 'TEAM_REMOVED':\n        if (payload.teamId === state.quiz.teamName) {\n          ws.emit('TEAM_DISCONNECT', {\n            lobby: state.quiz.lobbyId\n          });\n          dispatch(resetAll());\n          history.push('/');\n        }\n\n        break;\n\n      case 'NEW_QUESTION':\n        console.log('NEW QUESTION'); // TODO: Go to questions page and show fetch question.\n\n        break;\n\n      case 'LOBBY_ENDED':\n        // TODO: Go back to home page.\n        break;\n\n      default:\n        console.log('Socket.io message:', type, payload);\n    }\n  });\n};\n\nexport { connect, socket };","map":{"version":3,"sources":["/home/niels/Projects/school/quizzer/client/team/src/socket.js"],"names":["io","resetAll","ws","connect","lobby","emit","socket","dispatch","state","history","undefined","reconnectionDelayMax","withCredentials","off","on","type","payload","teamId","quiz","teamName","lobbyId","push","console","log"],"mappings":"AAAA,SAASA,EAAT,QAAmB,kBAAnB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,IAAIC,EAAJ;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAIF,EAAE,CAACG,IAAH,CAAQ,cAAR,EAAwB;AAAED,EAAAA;AAAF,CAAxB,CAAzB;;AAEA,MAAME,MAAM,GAAG,CAACC,QAAD,EAAWC,KAAX,EAAkBC,OAAlB,KAA8B;AAC3C,MAAIP,EAAE,KAAKQ,SAAX,EAAsB;AACpBR,IAAAA,EAAE,GAAGF,EAAE,CAAC,qBAAD,EAAwB;AAAEW,MAAAA,oBAAoB,EAAE,KAAxB;AAA+BC,MAAAA,eAAe,EAAE;AAAhD,KAAxB,CAAP;AACD;;AAEDV,EAAAA,EAAE,CAACW,GAAH,CAAO,SAAP,EAAkBC,EAAlB,CAAqB,SAArB,EAAgC,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,KAAuB;AACrD,YAAQD,IAAR;AACE,WAAK,cAAL;AACE,YAAIC,OAAO,CAACC,MAAR,KAAmBT,KAAK,CAACU,IAAN,CAAWC,QAAlC,EAA4C;AAC1CjB,UAAAA,EAAE,CAACG,IAAH,CAAQ,iBAAR,EAA2B;AAAED,YAAAA,KAAK,EAAEI,KAAK,CAACU,IAAN,CAAWE;AAApB,WAA3B;AACAb,UAAAA,QAAQ,CAACN,QAAQ,EAAT,CAAR;AACAQ,UAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;AACD;;AACD;;AACF,WAAK,cAAL;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EADF,CAEE;;AACA;;AACF,WAAK,aAAL;AACE;AACA;;AACF;AACED,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCR,IAAlC,EAAwCC,OAAxC;AAhBJ;AAkBD,GAnBD;AAoBD,CAzBD;;AA2BA,SAASb,OAAT,EAAkBG,MAAlB","sourcesContent":["import { io } from 'socket.io-client';\nimport { resetAll } from './reducers/quiz';\n\nlet ws;\n\nconst connect = lobby => ws.emit('TEAM_CONNECT', { lobby });\n\nconst socket = (dispatch, state, history) => {\n  if (ws === undefined) {\n    ws = io('ws://localhost:3000', { reconnectionDelayMax: 10000, withCredentials: true });\n  }\n\n  ws.off('message').on('message', ({ type, payload }) => {\n    switch (type) {\n      case 'TEAM_REMOVED':\n        if (payload.teamId === state.quiz.teamName) {\n          ws.emit('TEAM_DISCONNECT', { lobby: state.quiz.lobbyId });\n          dispatch(resetAll());\n          history.push('/');\n        }\n        break;\n      case 'NEW_QUESTION':\n        console.log('NEW QUESTION');\n        // TODO: Go to questions page and show fetch question.\n        break;\n      case 'LOBBY_ENDED':\n        // TODO: Go back to home page.\n        break;\n      default:\n        console.log('Socket.io message:', type, payload);\n    }\n  });\n};\n\nexport { connect, socket };"]},"metadata":{},"sourceType":"module"}